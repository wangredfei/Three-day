day11.txt

2.DOM - Document Object Model
	1.文档对象模型，主要围绕document对象，实现对网页文档内容的操作
	2.在JS中，认为HTML文件本身就是一篇文档，文档的层次结构，对应在JS中表现为节点树
		节点：网页在解析过程中，其中的标签，标签属性，文本内容都会被封装成一个节点
		节点：
			1.元素节点 -> 标签名
			2.属性节点 -> 标签属性
			3.文本节点 -> 文本内容
			---------------------
			4.文档节点 -> document
			5.注释节点 -> 网页中的注释
		节点操作：
			1.获取节点
			2.读取和修改节点内容
			3.创建节点
			4.添加节点
			5.删除节点
	3.获取元素节点
		1.document.getElementsByTagName('div');
			作用：通过标签名获取元素节点
			返回值：节点列表(数组)
			参数：字符串的标签
		2.document.getElementsByClassName('className')
			作用：根据class属性值，获取元素节点的数组
			返回：节点列表
			参数：字符串的class属性值
		3.document.getElementById('id属性值');
			作用：根据id属性值获取具体的元素节点
			返回：节点对象
			属性：id属性值
		4.document.getElementsByName('name');
			作用：根据name属性值，获取节点数组
		练习：
			创建文本框和按钮，div
			点击按钮时，获取文本框输入的内容，以一级标题的形式显示在div中 innerHTML
		元素节点常用属性：
			1.innerHTML
				读取或设置元素节点的标签内容，可以识别HTML标签语法
			2.innerText
				读取或设置元素节点的文本内容，不能识别标签语法
			3.value 
				针对表单控件，表示表单元素的值
	4.操作标签属性
		1.getAttribute('attrName');
			根据属性名，获取属性值
		2.setAttribute('attrName','attrValue');
			为元素节点添加标签属性
		3.removeAttribute('attrName');
			移除指定属性
		4.标签属性也是元素节点对象的属性，可用点语法直接访问
			例：
				h1.id = 'd1';
				//避免与JS关键字冲突，标签属性class对应的属性名使用className表示
				h1.className = 'c1';
				//移除属性值
				h1.id = null;
		5.操作元素节点的样式
			1.为元素添加id/class属性，对应选择器样式
				例：
					h1.setAttribute('class','c1');
					h1.className = 'c1';
			2.操作行内样式
				例：
					<h1 style="color:red;">
				通过元素访问style属性，返回样式对象
					h1.style:样式对象
				样式对象中包含全部的CSS属性，可以通过点语法直接操作
				注：通过样式对象点语法访问CSS属性，对于带有链接符的属性
					一律更名为驼峰标识
					h1.style.fontSize = "20px";